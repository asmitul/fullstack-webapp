name: Deploy

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    services:
      mongodb:
        image: mongo:6.0
        ports:
          - 27017:27017
      
      redis:
        image: redis:7.0
        ports:
          - 6379:6379
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install system dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y netcat-openbsd
    
    - name: Install backend dependencies
      run: |
        cd backend
        python -m pip install --upgrade pip
        pip install -r requirements.txt
    
    - name: Wait for MongoDB and Redis
      run: |
        # Wait for MongoDB to be ready
        echo "Waiting for MongoDB to be ready..."
        timeout 60 bash -c 'until nc -z localhost 27017; do sleep 1; done'
        
        # Wait for Redis to be ready
        echo "Waiting for Redis to be ready..."
        timeout 60 bash -c 'until nc -z localhost 6379; do sleep 1; done'
        
        echo "Services are ready!"
    
    - name: Run backend tests
      run: |
        cd backend
        # Create __init__.py in tests directory if it doesn't exist
        touch tests/__init__.py
        # Run all the tests
        python -m pytest
    
    - name: Set up Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Run frontend build
      run: |
        cd frontend
        npm run build

  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up SSH
      uses: webfactory/ssh-agent@v0.7.0
      with:
        ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}
    
    - name: Add host key
      run: |
        mkdir -p ~/.ssh
        ssh-keyscan -H ${{ secrets.VPS_HOST }} >> ~/.ssh/known_hosts
    
    - name: Deploy to VPS
      run: |
        ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "mkdir -p ${{ secrets.VPS_PATH }}"
        ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "cd ${{ secrets.VPS_PATH }} && git pull || git clone https://github.com/${{ github.repository }}.git ."
        ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "cd ${{ secrets.VPS_PATH }} && docker-compose down"
        ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "cd ${{ secrets.VPS_PATH }} && docker-compose build"
        ssh ${{ secrets.VPS_USER }}@${{ secrets.VPS_HOST }} "cd ${{ secrets.VPS_PATH }} && docker-compose up -d" 