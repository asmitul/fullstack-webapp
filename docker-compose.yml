services:
  # Backend service
  backend:
    build:
      context: ./backend
    ports:
      - "8000:8000"
      - "8002:8002"  # For health check app
    volumes:
      - ./backend:/app
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/taskmanager
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-secret-key
      - ACCESS_TOKEN_EXPIRE_MINUTES=60
      - CORS_ORIGINS=["http://localhost:3000"]
    depends_on:
      - mongodb
      - redis
    networks:
      - app-network
    restart: unless-stopped

  # Frontend service
  frontend:
    build:
      context: ./frontend
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules
    environment:
      - NEXT_PUBLIC_API_URL=http://localhost/api
    depends_on:
      - backend
    networks:
      - app-network
    restart: unless-stopped

  # MongoDB service
  mongodb:
    image: mongo:6.0
    ports:
      - "27017:27017"
    volumes:
      - mongodb-data:/data/db
    environment:
      - MONGO_INITDB_DATABASE=taskdb
    networks:
      - app-network
    restart: unless-stopped

  # Redis service
  redis:
    image: redis:7.0-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - app-network
    restart: unless-stopped

  # Nginx service
  nginx:
    image: nginx:1.25-alpine
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
      - frontend
    networks:
      - app-network
    restart: unless-stopped

volumes:
  mongodb-data:
  redis-data:

networks:
  app-network:
    driver: bridge 